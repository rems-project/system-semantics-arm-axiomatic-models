(* ********************************************************************** *)
(* BSD 2-Clause License                                                   *)
(*                                                                        *)
(* Copyright (c) 2022 Alasdair Armstrong                                  *)
(*                                                                        *)
(* All rights reserved.                                                   *)
(*                                                                        *)
(* Redistribution and use in source and binary forms, with or without     *)
(* modification, are permitted provided that the following conditions are *)
(* met:                                                                   *)
(*                                                                        *)
(* 1. Redistributions of source code must retain the above copyright      *)
(* notice, this list of conditions and the following disclaimer.          *)
(*                                                                        *)
(* 2. Redistributions in binary form must reproduce the above copyright   *)
(* notice, this list of conditions and the following disclaimer in the    *)
(* documentation and/or other materials provided with the distribution.   *)
(*                                                                        *)
(* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *)
(* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *)
(* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  *)
(* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   *)
(* HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, *)
(* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *)
(* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  *)
(* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  *)
(* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT    *)
(* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  *)
(* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.   *)
(* ********************************************************************** *)

enum cache_op_kind = {
  Cache_op_D_IVAC, Cache_op_D_ISW,  Cache_op_D_CSW,  Cache_op_D_CISW,
  Cache_op_D_ZVA,  Cache_op_D_CVAC, Cache_op_D_CVAU, Cache_op_D_CIVAC,
  (* AArch64 IC *)
  Cache_op_I_IALLUIS, Cache_op_I_IALLU, Cache_op_I_IVAU
}

accessor C_address: bits(64) = .address
accessor C_kind: cache_op_kind = .kind
accessor C: bool = is sail_cache_op

define DC(ev: Event): bool =
    C(ev)
    & ((C_kind(ev) == Cache_op_D_IVAC) | (C_kind(ev) == Cache_op_D_ISW) | (C_kind(ev) == Cache_op_D_CSW) | (C_kind(ev) == Cache_op_D_CISW) |
       (C_kind(ev) == Cache_op_D_ZVA) | (C_kind(ev) == Cache_op_D_CVAC) | (C_kind(ev) == Cache_op_D_CVAU) | (C_kind(ev) == Cache_op_D_CIVAC))

define IC(ev: Event): bool =
    C(ev)
    & ((C_kind(ev) == Cache_op_I_IALLUIS) | (C_kind(ev) == Cache_op_I_IALLU) | (C_kind(ev) == Cache_op_I_IVAU))
